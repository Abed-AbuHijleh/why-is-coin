{"ast":null,"code":"var _jsxFileName = \"/Users/abed/Documents/Productivity/why-is-coin/src/components/ticker-info/info-table.jsx\";\nimport React from \"react\";\nimport \"./info-table.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { BsChevronUp } from \"react-icons/bs\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction circSuppCalc(post) {\n  const max = parseInt(post.data[1].value.split(\",\").join(\"\"));\n  const current = parseInt(post.data[0].value.split(\",\").join(\"\"));\n\n  if (max > 0) {\n    return returnSigFigs(current / max * 100, 4);\n  } else {\n    return \"--\";\n  }\n}\n\nfunction numberWithCommas(x) {\n  const parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\nfunction returnSigFigs(value, sigFigs) {\n  if (sigFigs === 4) {\n    if (value < 1 && value > -1) {\n      if (value < 0.001 && value > -0.001) {\n        return Math.round(value * 10000000) / 10000000;\n      } else {\n        return Math.round(value * 10000) / 10000;\n      }\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else if (sigFigs === 2) {\n    if (value > 0) {\n      return \"+\" + Math.round(value * 100) / 100;\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else {\n    return Math.round(value);\n  }\n}\n\nconst Component = info => {\n  var _s = $RefreshSig$();\n\n  const useRowStyles = makeStyles({\n    root: {\n      \"& > *\": {\n        borderBottom: \"unset\",\n        color: info.colors[2]\n      }\n    },\n    chip: {\n      \"& > *\": {\n        borderBottom: \"unset\",\n        color: info.colors[2]\n      }\n    }\n  });\n\n  const Row = props => {\n    _s();\n\n    const {\n      row\n    } = props;\n    const [open, setOpen] = React.useState(true);\n    const classes = useRowStyles();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableRow, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"expand row\",\n            size: \"small\",\n            onClick: () => setOpen(!open),\n            children: open ? /*#__PURE__*/_jsxDEV(BsChevronUp, {\n              id: \"info-table-chevron\",\n              style: {\n                color: info.colors[5]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(BsChevronDown, {\n              id: \"info-table-chevron\",\n              style: {\n                color: info.colors[5]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: \"400\",\n                fontSize: \"18px\"\n              },\n              children: row.header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, row.header, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          style: {\n            paddingBottom: 0,\n            paddingTop: 0\n          },\n          colSpan: 2,\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: row.index === \"2\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexWrap: \"wrap\"\n                },\n                children: row.data[0].map((value, index) => {\n                  return /*#__PURE__*/_jsxDEV(Chip, {\n                    className: classes.chip,\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    label: value.split(\"-\").join(\" \"),\n                    style: {\n                      margin: 2\n                    }\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                \"aria-label\": \"info\",\n                children: /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: [row.data.map(dataRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      style: {\n                        color: info.colors[2]\n                      },\n                      children: dataRow.key\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      style: {\n                        color: info.colors[2]\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: dataRow.class,\n                        children: dataRow.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 27\n                    }, this)]\n                  }, dataRow.key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)), row.index === \"1\" ? /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Slider, {\n                        style: {\n                          color: info.colors[4]\n                        },\n                        defaultValue: circSuppCalc(row),\n                        \"aria-labelledby\": \"disabled-slider\",\n                        disabled: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      style: {\n                        color: info.colors[2]\n                      },\n                      children: [circSuppCalc(row), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(TableRow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Row, \"lUU1E9rZ6wrMPIJ6IceBIwiGOe0=\", false, function () {\n    return [useRowStyles];\n  });\n\n  const data = info.data;\n\n  try {\n    const rows = [{\n      index: \"0\",\n      header: \"Percent Change\",\n      data: [{\n        key: \"1 Hour\",\n        value: returnSigFigs(data.pc_hour, 2) + \"%\",\n        class: data.pc_hour < 0 ? \"red\" : \"green\"\n      }, {\n        key: \"24 Hours\",\n        value: returnSigFigs(data.pc_day, 2) + \"%\",\n        class: data.pc_day < 0 ? \"red\" : \"green\"\n      }, {\n        key: \"7 Days\",\n        value: returnSigFigs(data.pc_week, 2) + \"%\",\n        class: data.pc_week < 0 ? \"red\" : \"green\"\n      }, {\n        key: \"30 Days\",\n        value: returnSigFigs(data.pc_month, 2) + \"%\",\n        class: data.pc_month < 0 ? \"red\" : \"green\"\n      }]\n    }, {\n      index: \"1\",\n      header: \"Circulating Supply\",\n      data: [{\n        key: \"Circulating Supply\",\n        value: numberWithCommas(returnSigFigs(data.circulating_supply, 4)),\n        class: \"null\"\n      }, {\n        key: \"Max Supply\",\n        value: numberWithCommas(returnSigFigs(data.max_supply, 4)),\n        class: \"null\"\n      }]\n    }, {\n      index: \"2\",\n      header: \"Tags\",\n      data: [data.tags]\n    }];\n    return /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"400\",\n                  fontSize: \"18px\"\n                },\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"400\",\n                  fontSize: \"18px\"\n                },\n                children: \"$\" + numberWithCommas(returnSigFigs(data.price, 4))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: \"24h Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: \"$\" + numberWithCommas(returnSigFigs(data.volume_day, 4))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Platform\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: info.colors[2]\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: data.platform === null ? data.name : data.platform.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), rows.map(row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            row: row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, row.header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  } catch (e) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = Component;\nexport default Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["/Users/abed/Documents/Productivity/why-is-coin/src/components/ticker-info/info-table.jsx"],"names":["React","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableRow","Typography","Slider","Chip","BsChevronUp","BsChevronDown","circSuppCalc","post","max","parseInt","data","value","split","join","current","returnSigFigs","numberWithCommas","x","parts","toString","replace","sigFigs","Math","round","Component","info","useRowStyles","root","borderBottom","color","colors","chip","Row","props","row","open","setOpen","useState","classes","fontWeight","fontSize","header","paddingBottom","paddingTop","index","display","justifyContent","alignItems","flexWrap","map","margin","dataRow","key","class","rows","pc_hour","pc_day","pc_week","pc_month","circulating_supply","max_supply","tags","price","volume_day","platform","name","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,GAAG,GAAGC,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAU,CAAV,EAAaC,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BC,IAA9B,CAAmC,EAAnC,CAAD,CAApB;AACA,QAAMC,OAAO,GAAGL,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAU,CAAV,EAAaC,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BC,IAA9B,CAAmC,EAAnC,CAAD,CAAxB;;AACA,MAAIL,GAAG,GAAG,CAAV,EAAa;AACX,WAAOO,aAAa,CAAED,OAAO,GAAGN,GAAX,GAAkB,GAAnB,EAAwB,CAAxB,CAApB;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASQ,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,QAAMC,KAAK,GAAGD,CAAC,CAACE,QAAF,GAAaP,KAAb,CAAmB,GAAnB,CAAd;AACAM,EAAAA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,uBAAjB,EAA0C,GAA1C,CAAX;AACA,SAAOF,KAAK,CAACL,IAAN,CAAW,GAAX,CAAP;AACD;;AAED,SAASE,aAAT,CAAuBJ,KAAvB,EAA8BU,OAA9B,EAAuC;AACrC,MAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,QAAIV,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAC,CAA1B,EAA6B;AAC3B,UAAIA,KAAK,GAAG,KAAR,IAAiBA,KAAK,GAAG,CAAC,KAA9B,EAAqC;AACnC,eAAOW,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAG,QAAnB,IAA+B,QAAtC;AACD,OAFD,MAEO;AACL,eAAOW,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAG,KAAnB,IAA4B,KAAnC;AACD;AACF,KAND,MAMO;AACL,aAAOW,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACD;AACF,GAVD,MAUO,IAAIU,OAAO,KAAK,CAAhB,EAAmB;AACxB,QAAIV,KAAK,GAAG,CAAZ,EAAe;AACb,aAAO,MAAMW,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAG,GAAnB,IAA0B,GAAvC;AACD,KAFD,MAEO;AACL,aAAOW,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACD;AACF,GANM,MAMA;AACL,WAAOW,IAAI,CAACC,KAAL,CAAWZ,KAAX,CAAP;AACD;AACF;;AAED,MAAMa,SAAS,GAAGC,IAAI,IAAI;AAAA;;AACxB,QAAMC,YAAY,GAAGjC,UAAU,CAAC;AAC9BkC,IAAAA,IAAI,EAAE;AACJ,eAAS;AACPC,QAAAA,YAAY,EAAE,OADP;AAEPC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAFA;AADL,KADwB;AAO9BC,IAAAA,IAAI,EAAE;AACJ,eAAS;AACPH,QAAAA,YAAY,EAAE,OADP;AAEPC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAFA;AADL;AAPwB,GAAD,CAA/B;;AAeA,QAAME,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAUD,KAAhB;AACA,UAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB5C,KAAK,CAAC6C,QAAN,CAAe,IAAf,CAAxB;AACA,UAAMC,OAAO,GAAGZ,YAAY,EAA5B;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEY,OAAO,CAACX,IAA7B;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,UAAD;AACE,0BAAW,YADb;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,OAAO,EAAE,MAAMS,OAAO,CAAC,CAACD,IAAF,CAHxB;AAAA,sBAKGA,IAAI,gBACH,QAAC,WAAD;AACE,cAAA,EAAE,EAAC,oBADL;AAEE,cAAA,KAAK,EAAE;AAAEN,gBAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT;AAFT;AAAA;AAAA;AAAA;AAAA,oBADG,gBAMH,QAAC,aAAD;AACE,cAAA,EAAE,EAAC,oBADL;AAEE,cAAA,KAAK,EAAE;AAAED,gBAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT;AAFT;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,IAArB;AAA0B,UAAA,KAAK,EAAC,KAAhC;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,YAAY,MAArC;AAAsC,YAAA,SAAS,EAAC,KAAhD;AAAA,mCACE;AAAM,cAAA,KAAK,EAAE;AAAES,gBAAAA,UAAU,EAAE,KAAd;AAAqBC,gBAAAA,QAAQ,EAAE;AAA/B,eAAb;AAAA,wBACGN,GAAG,CAACO;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA,SAAwCP,GAAG,CAACO,MAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eA6BE,QAAC,QAAD;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,aAAa,EAAE,CAAjB;AAAoBC,YAAAA,UAAU,EAAE;AAAhC,WAAlB;AAAuD,UAAA,OAAO,EAAE,CAAhE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAER,IAAd;AAAoB,YAAA,OAAO,EAAC,MAA5B;AAAmC,YAAA,aAAa,MAAhD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,MAAM,EAAE,CAAb;AAAA,wBACGD,GAAG,CAACU,KAAJ,KAAc,GAAd,gBACC;AACE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE,MADJ;AAELC,kBAAAA,cAAc,EAAE,QAFX;AAGLC,kBAAAA,UAAU,EAAE,QAHP;AAILC,kBAAAA,QAAQ,EAAE;AAJL,iBADT;AAAA,0BAQGd,GAAG,CAACxB,IAAJ,CAAS,CAAT,EAAYuC,GAAZ,CAAgB,CAACtC,KAAD,EAAQiC,KAAR,KAAkB;AACjC,sCACE,QAAC,IAAD;AACE,oBAAA,SAAS,EAAEN,OAAO,CAACP,IADrB;AAEE,oBAAA,KAAK,EAAC,SAFR;AAIE,oBAAA,OAAO,EAAC,UAJV;AAKE,oBAAA,KAAK,EAAEpB,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,GAAtB,CALT;AAME,oBAAA,KAAK,EAAE;AAAEqC,sBAAAA,MAAM,EAAE;AAAV;AANT,qBAGON,KAHP;AAAA;AAAA;AAAA;AAAA,0BADF;AAUD,iBAXA;AARH;AAAA;AAAA;AAAA;AAAA,sBADD,gBAuBC,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,8BAAW,MAA/B;AAAA,uCACE,QAAC,SAAD;AAAA,6BACGV,GAAG,CAACxB,IAAJ,CAASuC,GAAT,CAAaE,OAAO,iBACnB,QAAC,QAAD;AAAA,4CACE,QAAC,SAAD;AACE,sBAAA,SAAS,EAAC,IADZ;AAEE,sBAAA,KAAK,EAAC,KAFR;AAGE,sBAAA,KAAK,EAAE;AAAEtB,wBAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,uBAHT;AAAA,gCAKGqB,OAAO,CAACC;AALX;AAAA;AAAA;AAAA;AAAA,4BADF,eAQE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAE;AAAEvB,wBAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,uBAAlB;AAAA,6CACE;AAAM,wBAAA,EAAE,EAAEqB,OAAO,CAACE,KAAlB;AAAA,kCAA0BF,OAAO,CAACxC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BARF;AAAA,qBAAewC,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,0BADD,CADH,EAeGlB,GAAG,CAACU,KAAJ,KAAc,GAAd,gBACC,QAAC,QAAD;AAAA,4CACE,QAAC,SAAD;AAAA,6CACE,QAAC,MAAD;AACE,wBAAA,KAAK,EAAE;AAAEf,0BAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,yBADT;AAEE,wBAAA,YAAY,EAAExB,YAAY,CAAC4B,GAAD,CAF5B;AAGE,2CAAgB,iBAHlB;AAIE,wBAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eASE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAE;AAAEL,wBAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,uBAAlB;AAAA,iCACGxB,YAAY,CAAC4B,GAAD,CADf;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,gBAeC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,0BA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmGD,GAxGD;;AAhBwB,KAgBlBF,GAhBkB;AAAA,YAmBNN,YAnBM;AAAA;;AAyHxB,QAAMhB,IAAI,GAAGe,IAAI,CAACf,IAAlB;;AACA,MAAI;AACF,UAAM4C,IAAI,GAAG,CACX;AACEV,MAAAA,KAAK,EAAE,GADT;AAEEH,MAAAA,MAAM,EAAE,gBAFV;AAGE/B,MAAAA,IAAI,EAAE,CACJ;AACE0C,QAAAA,GAAG,EAAE,QADP;AAEEzC,QAAAA,KAAK,EAAEI,aAAa,CAACL,IAAI,CAAC6C,OAAN,EAAe,CAAf,CAAb,GAAiC,GAF1C;AAGEF,QAAAA,KAAK,EAAE3C,IAAI,CAAC6C,OAAL,GAAe,CAAf,GAAmB,KAAnB,GAA2B;AAHpC,OADI,EAMJ;AACEH,QAAAA,GAAG,EAAE,UADP;AAEEzC,QAAAA,KAAK,EAAEI,aAAa,CAACL,IAAI,CAAC8C,MAAN,EAAc,CAAd,CAAb,GAAgC,GAFzC;AAGEH,QAAAA,KAAK,EAAE3C,IAAI,CAAC8C,MAAL,GAAc,CAAd,GAAkB,KAAlB,GAA0B;AAHnC,OANI,EAWJ;AACEJ,QAAAA,GAAG,EAAE,QADP;AAEEzC,QAAAA,KAAK,EAAEI,aAAa,CAACL,IAAI,CAAC+C,OAAN,EAAe,CAAf,CAAb,GAAiC,GAF1C;AAGEJ,QAAAA,KAAK,EAAE3C,IAAI,CAAC+C,OAAL,GAAe,CAAf,GAAmB,KAAnB,GAA2B;AAHpC,OAXI,EAgBJ;AACEL,QAAAA,GAAG,EAAE,SADP;AAEEzC,QAAAA,KAAK,EAAEI,aAAa,CAACL,IAAI,CAACgD,QAAN,EAAgB,CAAhB,CAAb,GAAkC,GAF3C;AAGEL,QAAAA,KAAK,EAAE3C,IAAI,CAACgD,QAAL,GAAgB,CAAhB,GAAoB,KAApB,GAA4B;AAHrC,OAhBI;AAHR,KADW,EA2BX;AACEd,MAAAA,KAAK,EAAE,GADT;AAEEH,MAAAA,MAAM,EAAE,oBAFV;AAGE/B,MAAAA,IAAI,EAAE,CACJ;AACE0C,QAAAA,GAAG,EAAE,oBADP;AAEEzC,QAAAA,KAAK,EAAEK,gBAAgB,CAACD,aAAa,CAACL,IAAI,CAACiD,kBAAN,EAA0B,CAA1B,CAAd,CAFzB;AAGEN,QAAAA,KAAK,EAAE;AAHT,OADI,EAMJ;AACED,QAAAA,GAAG,EAAE,YADP;AAEEzC,QAAAA,KAAK,EAAEK,gBAAgB,CAACD,aAAa,CAACL,IAAI,CAACkD,UAAN,EAAkB,CAAlB,CAAd,CAFzB;AAGEP,QAAAA,KAAK,EAAE;AAHT,OANI;AAHR,KA3BW,EA2CX;AACET,MAAAA,KAAK,EAAE,GADT;AAEEH,MAAAA,MAAM,EAAE,MAFV;AAGE/B,MAAAA,IAAI,EAAE,CAACA,IAAI,CAACmD,IAAN;AAHR,KA3CW,CAAb;AAkDA,wBACE,QAAC,KAAD;AAAO,oBAAW,mBAAlB;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEhC,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAlB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,YAAY,MAArC;AAAsC,cAAA,SAAS,EAAC,KAAhD;AAAA,qCACE;AAAM,gBAAA,KAAK,EAAE;AAAES,kBAAAA,UAAU,EAAE,KAAd;AAAqBC,kBAAAA,QAAQ,EAAE;AAA/B,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,KAAK,EAAE;AAAEX,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAjC;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,YAAY,MAArC;AAAsC,cAAA,SAAS,EAAC,KAAhD;AAAA,qCACE;AAAM,gBAAA,KAAK,EAAE;AAAES,kBAAAA,UAAU,EAAE,KAAd;AAAqBC,kBAAAA,QAAQ,EAAE;AAA/B,iBAAb;AAAA,0BACG,MAAMxB,gBAAgB,CAACD,aAAa,CAACL,IAAI,CAACoD,KAAN,EAAa,CAAb,CAAd;AADzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEjC,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAlB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAjC;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA,wBACG,MAAMd,gBAAgB,CAACD,aAAa,CAACL,IAAI,CAACqD,UAAN,EAAkB,CAAlB,CAAd;AADzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eA6BE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAElC,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAlB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ;AAAT,aAAjC;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA,wBACGpB,IAAI,CAACsD,QAAL,KAAkB,IAAlB,GAAyBtD,IAAI,CAACuD,IAA9B,GAAqCvD,IAAI,CAACsD,QAAL,CAAcC;AADtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,EAyCGX,IAAI,CAACL,GAAL,CAASf,GAAG,iBACX,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,WAAqBA,GAAG,CAACO,MAAzB;AAAA;AAAA;AAAA;AAAA,gBADD,CAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmDD,GAtGD,CAsGE,OAAOyB,CAAP,EAAU;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAnOD;;KAAM1C,S;AAqON,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"./info-table.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { BsChevronUp } from \"react-icons/bs\";\nimport { BsChevronDown } from \"react-icons/bs\";\n\nfunction circSuppCalc(post) {\n  const max = parseInt(post.data[1].value.split(\",\").join(\"\"));\n  const current = parseInt(post.data[0].value.split(\",\").join(\"\"));\n  if (max > 0) {\n    return returnSigFigs((current / max) * 100, 4);\n  } else {\n    return \"--\";\n  }\n}\n\nfunction numberWithCommas(x) {\n  const parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\nfunction returnSigFigs(value, sigFigs) {\n  if (sigFigs === 4) {\n    if (value < 1 && value > -1) {\n      if (value < 0.001 && value > -0.001) {\n        return Math.round(value * 10000000) / 10000000;\n      } else {\n        return Math.round(value * 10000) / 10000;\n      }\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else if (sigFigs === 2) {\n    if (value > 0) {\n      return \"+\" + Math.round(value * 100) / 100;\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else {\n    return Math.round(value);\n  }\n}\n\nconst Component = info => {\n  const useRowStyles = makeStyles({\n    root: {\n      \"& > *\": {\n        borderBottom: \"unset\",\n        color: info.colors[2]\n      }\n    },\n    chip: {\n      \"& > *\": {\n        borderBottom: \"unset\",\n        color: info.colors[2]\n      }\n    }\n  });\n\n  const Row = props => {\n    const { row } = props;\n    const [open, setOpen] = React.useState(true);\n    const classes = useRowStyles();\n\n    return (\n      <React.Fragment>\n        <TableRow className={classes.root} key={row.header}>\n          <TableCell>\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? (\n                <BsChevronUp\n                  id=\"info-table-chevron\"\n                  style={{ color: info.colors[5] }}\n                />\n              ) : (\n                <BsChevronDown\n                  id=\"info-table-chevron\"\n                  style={{ color: info.colors[5] }}\n                />\n              )}\n            </IconButton>\n          </TableCell>\n          <TableCell component=\"th\" scope=\"row\">\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              <span style={{ fontWeight: \"400\", fontSize: \"18px\" }}>\n                {row.header}\n              </span>\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={2}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                {row.index === \"2\" ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      flexWrap: \"wrap\"\n                    }}\n                  >\n                    {row.data[0].map((value, index) => {\n                      return (\n                        <Chip\n                          className={classes.chip}\n                          color=\"primary\"\n                          key={index}\n                          variant=\"outlined\"\n                          label={value.split(\"-\").join(\" \")}\n                          style={{ margin: 2 }}\n                        />\n                      );\n                    })}\n                  </div>\n                ) : (\n                  <Table size=\"small\" aria-label=\"info\">\n                    <TableBody>\n                      {row.data.map(dataRow => (\n                        <TableRow key={dataRow.key}>\n                          <TableCell\n                            component=\"th\"\n                            scope=\"row\"\n                            style={{ color: info.colors[2] }}\n                          >\n                            {dataRow.key}\n                          </TableCell>\n                          <TableCell style={{ color: info.colors[2] }}>\n                            <span id={dataRow.class}>{dataRow.value}</span>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                      {row.index === \"1\" ? (\n                        <TableRow>\n                          <TableCell>\n                            <Slider\n                              style={{ color: info.colors[4] }}\n                              defaultValue={circSuppCalc(row)}\n                              aria-labelledby=\"disabled-slider\"\n                              disabled\n                            />\n                          </TableCell>\n                          <TableCell style={{ color: info.colors[2] }}>\n                            {circSuppCalc(row)}%\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <TableRow />\n                      )}\n                    </TableBody>\n                  </Table>\n                )}\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n    );\n  };\n  const data = info.data;\n  try {\n    const rows = [\n      {\n        index: \"0\",\n        header: \"Percent Change\",\n        data: [\n          {\n            key: \"1 Hour\",\n            value: returnSigFigs(data.pc_hour, 2) + \"%\",\n            class: data.pc_hour < 0 ? \"red\" : \"green\"\n          },\n          {\n            key: \"24 Hours\",\n            value: returnSigFigs(data.pc_day, 2) + \"%\",\n            class: data.pc_day < 0 ? \"red\" : \"green\"\n          },\n          {\n            key: \"7 Days\",\n            value: returnSigFigs(data.pc_week, 2) + \"%\",\n            class: data.pc_week < 0 ? \"red\" : \"green\"\n          },\n          {\n            key: \"30 Days\",\n            value: returnSigFigs(data.pc_month, 2) + \"%\",\n            class: data.pc_month < 0 ? \"red\" : \"green\"\n          }\n        ]\n      },\n      {\n        index: \"1\",\n        header: \"Circulating Supply\",\n        data: [\n          {\n            key: \"Circulating Supply\",\n            value: numberWithCommas(returnSigFigs(data.circulating_supply, 4)),\n            class: \"null\"\n          },\n          {\n            key: \"Max Supply\",\n            value: numberWithCommas(returnSigFigs(data.max_supply, 4)),\n            class: \"null\"\n          }\n        ]\n      },\n      {\n        index: \"2\",\n        header: \"Tags\",\n        data: [data.tags]\n      }\n    ];\n\n    return (\n      <Table aria-label=\"collapsible table\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ color: info.colors[2] }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                <span style={{ fontWeight: \"400\", fontSize: \"18px\" }}>\n                  Price\n                </span>\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: info.colors[2] }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                <span style={{ fontWeight: \"400\", fontSize: \"18px\" }}>\n                  {\"$\" + numberWithCommas(returnSigFigs(data.price, 4))}\n                </span>\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{ color: info.colors[2] }}>\n              <Typography gutterBottom component=\"div\">\n                24h Volume\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: info.colors[2] }}>\n              <Typography gutterBottom component=\"div\">\n                {\"$\" + numberWithCommas(returnSigFigs(data.volume_day, 4))}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{ color: info.colors[2] }}>\n              <Typography gutterBottom component=\"div\">\n                Platform\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: info.colors[2] }}>\n              <Typography gutterBottom component=\"div\">\n                {data.platform === null ? data.name : data.platform.name}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          {rows.map(row => (\n            <React.Fragment key={row.header}>\n              <Row row={row} />\n            </React.Fragment>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  } catch (e) {\n    return <div>Loading</div>;\n  }\n};\n\nexport default Component;\n"]},"metadata":{},"sourceType":"module"}