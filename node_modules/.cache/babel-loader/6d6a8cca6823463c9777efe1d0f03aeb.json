{"ast":null,"code":"var _jsxFileName = \"/Users/abed/Documents/Productivity/why-is-coin/src/components/ticker-info/info-table.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './info-table.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Chip from '@material-ui/core/Chip';\nimport { BsChevronUp } from 'react-icons/bs';\nimport { BsChevronDown } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n      color: 'RGB(241,241,241)'\n    }\n  },\n  chip: {\n    '& > *': {\n      borderBottom: 'unset',\n      color: 'RGB(241,241,241)'\n    }\n  }\n});\n\nfunction circSuppCalc(post) {\n  const max = parseInt(post.data[1].value.split(',').join(''));\n  const current = parseInt(post.data[0].value.split(',').join(''));\n\n  if (max > 0) {\n    return returnSigFigs(current / max * 100, 4);\n  } else {\n    return '--';\n  }\n}\n\nfunction numberWithCommas(x) {\n  const parts = x.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n}\n\nfunction returnSigFigs(value, sigFigs) {\n  if (sigFigs === 4) {\n    if (value < 1 && value > -1) {\n      if (value < 0.001 && value > -0.001) {\n        return Math.round(value * 10000000) / 10000000;\n      } else {\n        return Math.round(value * 10000) / 10000;\n      }\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else if (sigFigs === 2) {\n    if (value > 0) {\n      return '+' + Math.round(value * 100) / 100;\n    } else {\n      return Math.round(value * 100) / 100;\n    }\n  } else {\n    return Math.round(value);\n  }\n}\n\nconst Row = props => {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(true);\n  const classes = useRowStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(BsChevronUp, {\n            id: \"info-table-chevron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BsChevronDown, {\n            id: \"info-table-chevron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          component: \"div\",\n          children: row.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, row.header, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 2,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: row.index === '2' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexWrap: 'wrap'\n              },\n              children: row.data[0].map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(Chip, {\n                  className: classes.chip,\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  label: value.split('-').join(' '),\n                  style: {\n                    margin: 2\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"info\",\n              children: /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [row.data.map(dataRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    style: {\n                      color: 'RGB(241,241,241)'\n                    },\n                    children: dataRow.key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: 'RGB(241,241,241)'\n                    },\n                    children: dataRow.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this)]\n                }, dataRow.key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)), row.index === '1' ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Slider, {\n                      style: {\n                        color: 'rgb(52, 52, 255)'\n                      },\n                      defaultValue: circSuppCalc(row),\n                      \"aria-labelledby\": \"disabled-slider\",\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: 'RGB(241,241,241)'\n                    },\n                    children: [circSuppCalc(row), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(TableRow, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Row, \"lUU1E9rZ6wrMPIJ6IceBIwiGOe0=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\n\nconst Component = info => {\n  const data = info.data;\n\n  try {\n    const rows = [{\n      index: '0',\n      header: 'Percent Change',\n      data: [{\n        key: '1 Hour',\n        value: returnSigFigs(data.pc_hour, 2) + '%'\n      }, {\n        key: '24 Hours',\n        value: returnSigFigs(data.pc_day, 2) + '%'\n      }, {\n        key: '7 Days',\n        value: returnSigFigs(data.pc_week, 2) + '%'\n      }, {\n        key: '30 Days',\n        value: returnSigFigs(data.pc_month, 2) + '%'\n      }]\n    }, {\n      index: '1',\n      header: 'Circulating Supply',\n      data: [{\n        key: 'Circulating Supply',\n        value: numberWithCommas(returnSigFigs(data.circulating_supply, 4))\n      }, {\n        key: 'Max Supply',\n        value: numberWithCommas(returnSigFigs(data.max_supply, 4))\n      }]\n    }, {\n      index: '2',\n      header: 'Tags',\n      data: [data.tags]\n    }];\n    return /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: '$' + numberWithCommas(returnSigFigs(data.price, 4))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: \"24h Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: '$' + numberWithCommas(returnSigFigs(data.volume_day, 4))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Platform\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: 'RGB(241,241,241)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              component: \"div\",\n              children: data.platform === null ? data.name : data.platform.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), rows.map(row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            row: row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, row.header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  } catch (e) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c2 = Component;\nexport default Component;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"sources":["/Users/abed/Documents/Productivity/why-is-coin/src/components/ticker-info/info-table.jsx"],"names":["React","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableRow","Typography","Slider","Chip","BsChevronUp","BsChevronDown","useRowStyles","root","borderBottom","color","chip","circSuppCalc","post","max","parseInt","data","value","split","join","current","returnSigFigs","numberWithCommas","x","parts","toString","replace","sigFigs","Math","round","Row","props","row","open","setOpen","useState","classes","header","paddingBottom","paddingTop","index","display","justifyContent","alignItems","flexWrap","map","margin","dataRow","key","Component","info","rows","pc_hour","pc_day","pc_week","pc_month","circulating_supply","max_supply","tags","price","volume_day","platform","name","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './info-table.css'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport Chip from '@material-ui/core/Chip'\nimport { BsChevronUp } from 'react-icons/bs'\nimport { BsChevronDown } from 'react-icons/bs'\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n      color: 'RGB(241,241,241)',\n    },\n  },\n  chip: {\n    '& > *': {\n      borderBottom: 'unset',\n      color: 'RGB(241,241,241)',\n    },\n  },\n})\n\nfunction circSuppCalc(post) {\n  const max = parseInt(post.data[1].value.split(',').join(''))\n  const current = parseInt(post.data[0].value.split(',').join(''))\n  if (max > 0) {\n    return returnSigFigs((current / max) * 100, 4)\n  } else {\n    return '--'\n  }\n}\n\nfunction numberWithCommas(x) {\n  const parts = x.toString().split('.')\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  return parts.join('.')\n}\n\nfunction returnSigFigs(value, sigFigs) {\n  if (sigFigs === 4) {\n    if (value < 1 && value > -1) {\n      if (value < 0.001 && value > -0.001) {\n        return Math.round(value * 10000000) / 10000000\n      } else {\n        return Math.round(value * 10000) / 10000\n      }\n    } else {\n      return Math.round(value * 100) / 100\n    }\n  } else if (sigFigs === 2) {\n    if (value > 0) {\n      return '+' + Math.round(value * 100) / 100\n    } else {\n      return Math.round(value * 100) / 100\n    }\n  } else {\n    return Math.round(value)\n  }\n}\n\nconst Row = (props) => {\n  const { row } = props\n  const [open, setOpen] = React.useState(true)\n  const classes = useRowStyles()\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root} key={row.header}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? (\n              <BsChevronUp id=\"info-table-chevron\" />\n            ) : (\n              <BsChevronDown id=\"info-table-chevron\" />\n            )}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          <Typography variant=\"h6\" gutterBottom component=\"div\">\n            {row.header}\n          </Typography>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={2}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              {row.index === '2' ? (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexWrap: 'wrap',\n                  }}\n                >\n                  {row.data[0].map((value, index) => {\n                    return (\n                      <Chip\n                        className={classes.chip}\n                        color=\"primary\"\n                        key={index}\n                        variant=\"outlined\"\n                        label={value.split('-').join(' ')}\n                        style={{ margin: 2 }}\n                      />\n                    )\n                  })}\n                </div>\n              ) : (\n                <Table size=\"small\" aria-label=\"info\">\n                  <TableBody>\n                    {row.data.map((dataRow) => (\n                      <TableRow key={dataRow.key}>\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{ color: 'RGB(241,241,241)' }}\n                        >\n                          {dataRow.key}\n                        </TableCell>\n                        <TableCell style={{ color: 'RGB(241,241,241)' }}>\n                          {dataRow.value}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                    {row.index === '1' ? (\n                      <TableRow>\n                        <TableCell>\n                          <Slider\n                            style={{ color: 'rgb(52, 52, 255)' }}\n                            defaultValue={circSuppCalc(row)}\n                            aria-labelledby=\"disabled-slider\"\n                            disabled\n                          />\n                        </TableCell>\n                        <TableCell style={{ color: 'RGB(241,241,241)' }}>\n                          {circSuppCalc(row)}%\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      <TableRow />\n                    )}\n                  </TableBody>\n                </Table>\n              )}\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  )\n}\n\nconst Component = (info) => {\n  const data = info.data\n  try {\n    const rows = [\n      {\n        index: '0',\n        header: 'Percent Change',\n        data: [\n          {\n            key: '1 Hour',\n            value: returnSigFigs(data.pc_hour, 2) + '%',\n          },\n          {\n            key: '24 Hours',\n            value: returnSigFigs(data.pc_day, 2) + '%',\n          },\n          {\n            key: '7 Days',\n            value: returnSigFigs(data.pc_week, 2) + '%',\n          },\n          {\n            key: '30 Days',\n            value: returnSigFigs(data.pc_month, 2) + '%',\n          },\n        ],\n      },\n      {\n        index: '1',\n        header: 'Circulating Supply',\n        data: [\n          {\n            key: 'Circulating Supply',\n            value: numberWithCommas(returnSigFigs(data.circulating_supply, 4)),\n          },\n          {\n            key: 'Max Supply',\n            value: numberWithCommas(returnSigFigs(data.max_supply, 4)),\n          },\n        ],\n      },\n      {\n        index: '2',\n        header: 'Tags',\n        data: [data.tags],\n      },\n    ]\n\n    return (\n      <Table aria-label=\"collapsible table\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ color: 'RGB(241,241,241)' }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Price\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: 'RGB(241,241,241)' }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                {'$' + numberWithCommas(returnSigFigs(data.price, 4))}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{ color: 'RGB(241,241,241)' }}>\n              <Typography gutterBottom component=\"div\">\n                24h Volume\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: 'RGB(241,241,241)' }}>\n              <Typography gutterBottom component=\"div\">\n                {'$' + numberWithCommas(returnSigFigs(data.volume_day, 4))}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{ color: 'RGB(241,241,241)' }}>\n              <Typography gutterBottom component=\"div\">\n                Platform\n              </Typography>\n            </TableCell>\n            <TableCell align=\"center\" style={{ color: 'RGB(241,241,241)' }}>\n              <Typography gutterBottom component=\"div\">\n                {data.platform === null ? data.name : data.platform.name}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          {rows.map((row) => (\n            <React.Fragment key={row.header}>\n              <Row row={row} />\n            </React.Fragment>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  } catch (e) {\n    return <div>Loading</div>\n  }\n}\n\nexport default Component\n"]},"metadata":{},"sourceType":"module"}